apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: Cypher Projection'
group = 'org.neo4j.gds'

dependencies {
    annotationProcessor project(':annotations')
    annotationProcessor project(':config-generator')
    annotationProcessor openGds.immutables.builder
    annotationProcessor openGds.immutables.value
    annotationProcessor neo4j.annotations

    compileOnly openGds.immutables.value.annotations
    compileOnly openGds.jetbrains.annotations
    compileOnly project(':logging')

    // Neo4j dependencies
    compileOnly(neo4j.annotations) { transitive = false }
    compileOnly(neo4j.common) { transitive = false }
    compileOnly(neo4j.gql.status) { transitive = false }
    compileOnly(neo4j.graphdb.api) { transitive = false }
    compileOnly(neo4j.kernel) { transitive = false }
    compileOnly(neo4j.kernel.api) { transitive = false }
    compileOnly(neo4j.resource) { transitive = false }
    compileOnly(neo4j.values) { transitive = false }

    implementation project(':annotations')
    implementation project(':config-api')
    implementation project(':core')
    implementation project(':graph-schema-api')
    implementation project(':gds-values')
    implementation project(':memory-usage')
    implementation project(':neo4j-values')
    implementation project(':progress-tracking')
    implementation project(':string-formatting')
    implementation project(':transaction')


    implementation openGds.jol.core
    implementation(openGds.opencypher.ccparser) {
        transitive = false
    }
    implementation openGds.hdrhistogram

    // Test dependencies
    testAnnotationProcessor project(':annotations')

    testCompileOnly openGds.immutables.value.annotations
    testCompileOnly openGds.immutables.builder
    testCompileOnly openGds.jetbrains.annotations

    testImplementation project(':executor')
    testImplementation project(':test-utils')
    testImplementation project(':proc-catalog')
    testImplementation project(':proc-community')
    testImplementation project(':test-graph-loaders')

    testImplementation openGds.neo4j.cypher.dsl

    testImplementation project(':opengds-extension')
}
