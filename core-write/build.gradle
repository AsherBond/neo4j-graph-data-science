apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: Core :: Write'

group = 'org.neo4j.gds'

dependencies {
    annotationProcessor project(':annotations')
    annotationProcessor project(':config-generator')
    annotationProcessor openGds.immutables.builder
    annotationProcessor openGds.immutables.value
    annotationProcessor neo4j.annotations

    compileOnly openGds.immutables.builder
    compileOnly openGds.immutables.value.annotations
    compileOnly openGds.jetbrains.annotations

    // Neo4j dependencies
    compileOnly(neo4j.common) { transitive = false }
    compileOnly(neo4j.gql.status) { transitive = false }
    compileOnly(neo4j.graphdb.api) { transitive = false }
    compileOnly(neo4j.kernel.api) { transitive = false }
    compileOnly(neo4j.kernel) { transitive = false }
    compileOnly(neo4j.schema) { transitive = false }
    compileOnly(neo4j.values) { transitive = false }

    implementation project(':annotations')
    implementation project(':concurrency')
    implementation project(':config-api')
    // Because `:core` exposes StatementApi which in turn is used in the various exporters
    implementation project(':core')
    implementation project(':core-api')
    implementation project(':core-utils')
    implementation project(':graph-projection-api')
    implementation project(':neo4j-values')
    implementation project(':progress-tracking')
    implementation project(':graph-schema-api')
    implementation project(':transaction')
    implementation project(':termination')

    // TEST DEPENDENCIES
    testImplementation project(':test-graph-loaders')
    testImplementation project(':test-utils')

    integrationTestImplementation project(':logging')
}
