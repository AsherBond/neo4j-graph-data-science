apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: Algorithms Procedure Facade'

group = 'org.neo4j.gds'

dependencies {
    neodeps().each {
        compileOnly(group: 'org.neo4j', name: it, version: ver.'neo4j') {
            transitive = false
        }
    }

    api (
        project(':centrality-facade-api'),
        project(':community-facade-api'),
    )

    // TODO: remove this once we get all categories to `api` modules?
    // We will still need something to expose this as API
    api project(':algorithms-facade-common')

    implementation project(':algo')
    implementation project(':algo-common')
    implementation project(':algorithms-machinery')
    implementation project(':annotations')
    implementation project(':applications-facade')
    implementation project(':centrality-algorithms')
    implementation project(':community-algorithms')
    implementation project(':config-api')
    implementation project(':core')
    implementation project(':defaults-and-limits-configuration')
    implementation project(':machine-learning-algorithms')
    implementation project(':memory-estimation')
    implementation project(':memory-usage')
    implementation project(':miscellaneous-algorithms')
    implementation project(':ml-algo')
    implementation project(':ml-core')
    implementation project(':model-catalog-api')
    implementation project(':node-embedding-algorithms')
    implementation project(':neo4j-api')
    implementation project(':path-finding-algorithms')
    implementation project(':pregel')
    implementation project(':progress-tracking')
    implementation project(':similarity-algorithms')
    implementation project(':string-formatting')

    // test infrastructure
    testCompileOnly openGds.jetbrains.annotations

    testImplementation platform(openGds.junit5bom)
    testImplementation openGds.junit5.jupiter
    testImplementation openGds.mockito.junit.jupiter
    testImplementation openGds.assertj.core

    testRuntimeOnly openGds.junit5.jupiter.engine


    testAnnotationProcessor project(':config-generator')
}
