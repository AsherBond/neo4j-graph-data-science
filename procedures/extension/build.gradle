apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: OpenGDS Extension'

group = 'org.neo4j.gds'

dependencies {
    // necessary in order to activate the extension
    annotationProcessor neo4j.annotations

    // Neo4j dependencies
    compileOnly(neo4j.annotations) { transitive = false }
    compileOnly(neo4j.common) { transitive = false }
    compileOnly(neo4j.configuration) { transitive = false }
    compileOnly(neo4j.gql.status) { transitive = false }
    compileOnly(neo4j.graphdb.api) { transitive = false }
    compileOnly(neo4j.kernel) { transitive = false }
    compileOnly(neo4j.kernel.api) { transitive = false }
    compileOnly(neo4j.logging) { transitive = false }

    // the necessary GDS things for the extension to construct the application
    implementation project(':algorithms-machinery')
    implementation project(':concurrency-validation-api')
    implementation project(':config-api')
    implementation project(':core')
    implementation project(':core-utils')
    implementation project(':core-write')
    implementation project(':cypher-aggregation')
    implementation project(':defaults-and-limits-configuration')
    implementation project(':executor')
    implementation project(':graph-store-catalog-applications')
    implementation project(':licensing')
    implementation project(':logging')
    implementation project(':metrics-api')
    implementation project(':ml-algo')
    implementation project(':model-catalog-api')
    implementation project(':model-catalog-applications')
    implementation project(':native-projection')
    implementation project(':neo4j-api')
    implementation project(':neo4j-kernel-adapter-api')
    implementation project(':node-embedding-algorithms')
    implementation project(':opengds-procedure-facade')
    implementation project(':open-licensing')
    implementation project(':open-model-catalog')
    implementation project(':operations-applications')
    implementation project(':path-finding-algorithms')
    implementation project(':proc-catalog')
    implementation project(':proc-community')
    implementation project(':proc-sysinfo')
    implementation project(':procedures-facade-api')
    implementation project(':procedure-integration')
    implementation project(':progress-tracking')
    implementation project(':subgraph-filtering')
}
