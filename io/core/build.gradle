apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: I/O Core'

group = 'org.neo4j.gds'

dependencies {
    annotationProcessor project(':annotations')
    annotationProcessor project(':config-generator')
    annotationProcessor openGds.recordBuilder
    annotationProcessor openGds.immutables.builder
    annotationProcessor openGds.immutables.value

    compileOnly openGds.recordBuilder
    compileOnly openGds.immutables.builder
    compileOnly openGds.immutables.value.annotations
    compileOnly openGds.jetbrains.annotations

    // Neo4j dependencies
    compileOnly(neo4j.common) { transitive = false }
    compileOnly(neo4j.configuration) { transitive = false }
    compileOnly(neo4j.gql.status) { transitive = false }
    compileOnly(neo4j.graphdb.api) { transitive = false }
    compileOnly(neo4j.id.generator) { transitive = false }
    compileOnly(neo4j.io) { transitive = false }
    compileOnly(neo4j.import.api) { transitive = false }
    compileOnly(neo4j.import.util) { transitive = false }
    compileOnly(neo4j.kernel) { transitive = false }
    compileOnly(neo4j.kernel.api) { transitive = false }
    compileOnly(neo4j.layout) { transitive = false }
    compileOnly(neo4j.logging) { transitive = false }

    implementation project(':annotations')
    implementation project(':config-api')
    implementation project(':core')
    implementation project(':core-utils')
    implementation project(':graph-schema-api')
    implementation project(':gds-values')
    implementation project(':logging')
    implementation project(':memory-usage')
    implementation project(':neo4j-kernel-adapter-api')
    implementation project(':neo4j-settings')
    implementation project(':progress-tracking')
    implementation project(':string-formatting')
    implementation project(':subgraph-filtering')
    implementation project(':transaction')

    implementation openGds.jackson.databind
    implementation openGds.jackson.dataformat.csv
    implementation openGds.fastcsv
    implementation(openGds.opencypher.ccparser) {
        transitive = false
    }

    // Test dependencies
    testImplementation project(':test-utils')
}
