apply plugin: 'java-library'

description = 'Neo4j Graph Data Science :: Neo4j Kernel Adapter API'

group = 'org.neo4j.gds'

dependencies {
    annotationProcessor project(':annotations')
    annotationProcessor neo4j.annotations
    annotationProcessor openGds.immutables.value
    annotationProcessor openGds.recordBuilder

    api project(':neo4j-adapter')

    compileOnly project(':annotations')
    compileOnly openGds.recordBuilder
    compileOnly openGds.jetbrains.annotations
    compileOnly openGds.eclipse.collections

    // This is needed by `neo4j.logging`
    compileOnly openGds.log4j.api

    // Neo4j dependencies
    compileOnly neo4j.annotations
    compileOnly(neo4j.bolt) { transitive = false }
    compileOnly(neo4j.common) { transitive = false }
    compileOnly(neo4j.configuration) { transitive = false }
    compileOnly(neo4j.gql.status) { transitive = false }
    compileOnly(neo4j.graphdb.api) { transitive = false }
    compileOnly(neo4j.io) { transitive = false }
    compileOnly(neo4j.kernel) { transitive = false }
    compileOnly(neo4j.kernel.api) { transitive = false }
    compileOnly(neo4j.layout) { transitive = false }
    compileOnly(neo4j.logging) { transitive = false }
    compileOnly(neo4j.neo4j) { transitive = false }
    compileOnly(neo4j.procedure.api) { transitive = false }
    compileOnly(neo4j.resource) { transitive = false }
    compileOnly(neo4j.schema) { transitive = false }
    compileOnly(neo4j.values) { transitive = false }

    // Test dependencies
    testAnnotationProcessor neo4j.annotations
    testImplementation project(':annotations')
    testImplementation project(':test-utils')
}

test {
    useJUnitPlatform()
}
