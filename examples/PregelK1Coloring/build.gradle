plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

ext {
    gdsVersion = '1.1.7'
    neo4jVersion = '3.5.31'
}

description = 'Graph Data Science :: Pregel Training'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // We depend on the proc artifact of the GDS library
    compileOnly "org.neo4j.gds:proc:$gdsVersion"
    compileOnly "org.neo4j.gds:algo-common:$gdsVersion"

    // We also need to depend on Neo4j itself for our tests.
    // Usually, Neo4j is available when we are running as a plugin.
    compileOnly "org.neo4j:neo4j:$neo4jVersion"

    // We need an annotation processor for our K1 configuration
    annotationProcessor "org.neo4j.gds:config-generator:$gdsVersion"
    compileOnly         'org.jetbrains:annotations:18.0.0'

    // We need to provide GDS for the test as well, along with some test helpers
    testImplementation "org.neo4j.gds:test-utils:$gdsVersion"
    testImplementation "org.neo4j.gds:proc:$gdsVersion"

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

shadowJar {
    baseName = "neo4j-gds-k1-pregel"
    classifier = "standalone"
    exclude 'META-INF/versions/**/*'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
